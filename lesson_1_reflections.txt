How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	It helps pointing out the lines where there are differences between the files.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could see how much time passes between versions. I could see how much I
    have improved the programs in time.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: You choose the commits under your preferences, avoiding undesired ones.
		Cons: You could forget to commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is intended for developers who work with several files at a time and
		Google Docs is intended for general purpose, where most user work with
		single files.

How can you use the commands git log and git diff to view the history of files?

    First I use "git log" to view info on all the commits. When I want to see
		the changes made in a commit I copy its ID and the ID of the prior commit.
		The command would look like this: git diff <ID_prior_commit> <ID_commit>

How might using version control make you more confident to make changes that
could break something?

    If under new changes something breaks I can use older commits to find where
		the bugs where introduced, so I can revert the changes to an operational
		state.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use it for some small projects of my own.
